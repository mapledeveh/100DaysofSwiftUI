//
//  ContentView.swift
//  GuessTheFlag
//
//  Created by Alex Nguyen on 2023-05-02.
//

import SwiftUI

// custom view
struct FlagImage: View {
    var stringArray: [String]
    var index: Int
    
    var body: some View {
        Image(stringArray[index])
            .renderingMode(.original)
            .clipShape(RoundedRectangle(cornerRadius: 10))
            .shadow(radius: 5)
    }
}

// custom modifier
struct ColourandFont: ViewModifier {
    var fontSize: Font = .largeTitle.bold()
    var fontColour: Color = .blue
    
    
    func body(content: Content) -> some View {
        content
            .font(fontSize)
            .foregroundColor(fontColour)
        // large, blue font suitable for prominent titles in a view
    }
}

extension View {
    func titleStyle(size: Font = ColourandFont().fontSize, colour: Color = ColourandFont().fontColour) -> some View {
        modifier(ColourandFont(fontSize: size, fontColour: colour))
    }
}


struct ContentView: View {
    
    @State private var showingScore = false
    @State private var scoreTitle = ""
    @State private var score = 0
    @State private var remainingQuestions = 8
    @State private var countries = [ "Canada", "Estonia", "France", "Germany", "Ireland", "Nigeria", "Poland", "Russia", "Spain", "UK", "US" ].shuffled()
    let emojiFlags = [ "Canada": "ðŸ‡¨ðŸ‡¦", "Estonia": "ðŸ‡ªðŸ‡ª", "France": "ðŸ‡«ðŸ‡·", "Germany": "ðŸ‡©ðŸ‡ª", "Ireland": "ðŸ‡®ðŸ‡ª", "Nigeria": "ðŸ‡³ðŸ‡¬", "Poland": "ðŸ‡µðŸ‡±", "Russia": "ðŸ‡·ðŸ‡º", "Spain": "ðŸ‡ªðŸ‡¸", "UK": "ðŸ‡¬ðŸ‡§", "US": "ðŸ‡ºðŸ‡¸" ]
    @State private var correctAnswer = Int.random(in: 0...2)
    
    var body: some View {
        
        ZStack {
            
            RadialGradient(stops: [ .init(color: Color(red: 0.95, green: 0.8, blue: 0.95), location: 0.3),
                                    .init(color: Color(red: 0.7, green: 0.2, blue: 0.35), location: 0.3) ], center: .top, startRadius: 200, endRadius: 700)
            .ignoresSafeArea()
            
            
            VStack {
                Spacer()
                
                Text("Guess The Flag")
                    .titleStyle()
                
                Spacer()
                
                VStack(spacing: 25) {
                    VStack {
                        Text("Tap the flag of")
                            .titleStyle(size: .subheadline.weight(.heavy), colour: .secondary)
                        Text(countries[correctAnswer])
                            .titleStyle(size: .largeTitle.weight(.semibold), colour: .primary)
                    }
                    
                    ForEach(0..<3) { number in
                        Button {
                            // flag was tapped
                            flagTapped(number)
                        } label: {
                            FlagImage(stringArray: countries, index: number)
                        }
                    }
                }
                .frame(maxWidth: .infinity)
                .padding(.vertical, 20)
                .background(.thinMaterial)
                .clipShape(RoundedRectangle(cornerRadius: 25))
                
                Spacer()
                
                Text("Score: \(score)")
                    .titleStyle(size: .title.bold(), colour: .white)
                Text("Questions remain: \(remainingQuestions)")
                    .foregroundColor(.white)
                
                Spacer()
            }
            .padding()
        }
        .alert(scoreTitle, isPresented: $showingScore) {
            if remainingQuestions > 0 {
                Button("Continue", action: askQuestion)
            } else {
                Button("Restart", role: .destructive, action: restartGame)
            }
            Button("Cancel", role: .cancel, action: {})
                .disabled(true)
        } message: {
            Text("Your \(remainingQuestions > 0 ? "current " : "final ")score is: \(score)")
        }
    }
    
    func flagTapped(_ number: Int) {
        if remainingQuestions > 0 {
            if number == correctAnswer {
                scoreTitle = "Correct! \n\(emojiFlags[countries[correctAnswer]]!) is the flag of \(countries[correctAnswer])"
                score += 1
            } else {
                scoreTitle = "Wrong! \(emojiFlags[countries[number]]!) is the flag of \(countries[number]) "
            }
        } else {
            restartGame()
        }
        
        showingScore = true
        remainingQuestions -= 1
    }
    
    func askQuestion() {
        countries.shuffle()
        correctAnswer = Int.random(in: 0...2)
    }
    
    func restartGame() {
        score = 0
        remainingQuestions = 8
        askQuestion()
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
