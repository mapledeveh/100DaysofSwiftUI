//
//  ContentView.swift
//  BuddyFace
//
//  Created by Alex Nguyen on 2023-07-03.
//

import SwiftUI

struct ContentView: View {
    @State private var users = [User]()
    
    let columns = [ GridItem(.adaptive(minimum: .infinity)) ]
    
    var body: some View {
        NavigationView {
            List {
                ForEach(users, id: \.id) { user in
                    NavigationLink {
                        UserView(user: user)
                    } label: {
                        Text(user.name)
                            .foregroundColor(.primary)
                    }
                }
            }
            .navigationTitle("BuddyFace")
        }
        .task {
            await loadData()
        }
    }
    
    func loadData() async {
        guard let url = URL(string: "https://www.hackingwithswift.com/samples/friendface.json") else {
            print("Error while loading URL!")
            return
        }
        
        do {
            let (data, _) = try await URLSession.shared.data(from: url)
            
            if let decodedResponse = try? JSONDecoder().decode([User].self, from: data) {
                users = decodedResponse
            }
        } catch {
            print("Invalid Data")
        }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}




//
//  UserView.swift
//  BuddyFace
//
//  Created by Alex Nguyen on 2023-07-03.
//

import SwiftUI

struct UserView: View {
    var user: User
    
    var body: some View {
        List {
            VStack(alignment: .leading) {
                Text(user.name)
                    .font(.largeTitle)
                
                Text("\(user.age)")
                    .font(.headline)
            }
            
            VStack(alignment: .leading) {
                Text("Email: \(user.email)")
                Text("Address: \(user.address)")
                Text("Company: \(user.company)")
                Text("Registered Date: \(registeredDate(user.registered).formatted(date: .abbreviated, time: .omitted))")
            }
            
            Text("About: \(user.about)")
            
            Text("Friends: \(combineFriendText(user.friends))")
            
            Text("Tags: \(user.tags.joined(separator: ", "))")
        }
        .navigationTitle("\(user.name)")
        .navigationBarTitleDisplayMode(.inline)
    }
    
    func registeredDate(_ date: String) -> Date {
        let regDate = ISO8601DateFormatter().date(from: date)
        return regDate ?? Date.now
    }
    
    func combineFriendText(_ array: [Friend]) -> String {
        var combinedText = ""
        
        for i in 0..<array.count {
            combinedText += array[i].name + (i == array.count - 1 ? "" : ", ")
        }
        
        return combinedText
    }
}

//struct UserView_Previews: PreviewProvider {
//    static var previews: some View {
//        UserView()
//    }
//}





//
//  User.swift
//  BuddyFace
//
//  Created by Alex Nguyen on 2023-07-03.
//

import Foundation

struct Friend: Codable {
    var id: UUID
    var name: String
}

struct User: Codable {
    var id: UUID
    var name: String
    var age: Int
    var company: String
    var email: String
    var address: String
    var about: String
    var tags: [String]
    var friends: [Friend]
    var isActive: Bool
    var registered: String
}
